// Focus states
.form-group {
  input,
  textarea {
    &, .dark-theme & {
      &, &.ng-touched.ng-invalid {
        &:focus {
          border-color: $input-border-focus;
          box-shadow: inset 0 0 0 1px rgba($input-border-focus, 0.5);
        }
      }
    }
  }
}

.form-control {
  &:focus {
    border-color: $input-border-focus;
    box-shadow: inset 0 0 0 1px rgba($input-border-focus, 0.5);
  }
}

.checkbox {
  input[type="checkbox"] {
    &, .dark-theme & {
      &:focus {
        background: $input-bg-focus;
        border-color: $input-border-focus;
        border-radius: $input-border-radius;
        box-shadow: inset 0 0 0 2px rgba($input-border-focus, 0.5);
      }
    }
  }
}

.radio {
  .check {
    &, .dark-theme & {
      &:focus {
        box-shadow: 0 0 0 2px $input-border-focus;
      }
    }
  }

  &.disabled {
    .check {
      &, .dark-theme & {
        &:focus {
          box-shadow: none;
        }
      }
    }
  }
}

select {
  &.form-control {
    &, .dark-theme & {
      &:focus {
        border-color: $input-border-focus;
        box-shadow: inset 0 0 0 1px rgba($input-border-focus, 0.5);
      }
    }
  }
}

// Validation states
input,
text-area {
  &.form-control {
    &, .dark-theme & {
      &.ng-touched {
        &.ng-invalid,
        &.ng-valid {
          border-style: solid;
          border-width: 1px;
        }

        &.ng-invalid {
          border-color: $alert-danger;

          &:focus {
            border-color: $alert-danger;
            box-shadow: inset 0 0 0 1px rgba($alert-danger, 0.5);
          }
        }

        &.ng-valid {
          border-color: $alert-success;

          &:focus {
            border-color: $alert-success;
            box-shadow: inset 0 0 0 1px rgba($alert-success, 0.5);
          }
        }
      }
    }
  }
}

.error {
  &.help-block {
    color: $alert-danger;

    > p:last-child {
      margin-bottom: 0;
    }

    ul {
      list-style: none;
      padding-left: 0;
      text-align: center;
    }
  }
}